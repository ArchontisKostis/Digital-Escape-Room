/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package EscapeRoom.GUI;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.swing.JFrame;
import javax.swing.JLabel;

/**
 *
 * @author Archontis
 */
public class SettingsPanel extends javax.swing.JPanel {
    // Properties Declaration
    String navState = "none";
    boolean musicOn = true;
    boolean soundOn = true;
    private MainFrame mainFrame;
    
    /**
     * Creates new form SettingsPanel
     */
    public SettingsPanel() {
        initComponents();
        this.setFocusable(true);
        this.addKeyListener(new myKeyListener());
    }
    
    public JLabel getMusicToggle(){
        return this.musicToggle;
    }
    
    public JLabel getSoundToggle(){
        return this.soundToggle;
    }
    
    public void setMainFrame(MainFrame aFrame){
        this.mainFrame = aFrame;
    }
    
    public void transferFocusToMainFrame(){
        this.mainFrame.requestFocus();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        escText = new javax.swing.JLabel();
        soundToggle = new javax.swing.JLabel();
        musicToggle = new javax.swing.JLabel();
        settingsBg = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        escText.setFont(new java.awt.Font("DPComic", 0, 18)); // NOI18N
        escText.setForeground(new java.awt.Color(255, 255, 255));
        escText.setText("Use ESC to go back to MAIN MENU");
        add(escText, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        soundToggle.setBackground(new java.awt.Color(255, 255, 255));
        soundToggle.setFont(new java.awt.Font("DPComic", 0, 65)); // NOI18N
        soundToggle.setForeground(new java.awt.Color(255, 255, 255));
        soundToggle.setText("SOUND ON");
        soundToggle.setEnabled(false);
        soundToggle.addMouseListener(new myMouseListener());
        add(soundToggle, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 310, 290, -1));

        musicToggle.setBackground(new java.awt.Color(255, 255, 255));
        musicToggle.setFont(new java.awt.Font("DPComic", 0, 65)); // NOI18N
        musicToggle.setForeground(new java.awt.Color(255, 255, 255));
        musicToggle.setText("MUSIC ON");
        musicToggle.setEnabled(false);
        musicToggle.addMouseListener(new myMouseListener());
        add(musicToggle, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 220, 270, -1));

        settingsBg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/EscapeRoom/guiAssets/settings.png"))); // NOI18N
        add(settingsBg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents
    
    
    /* MOUSE EVENT LISTENER CLASS START */
    class myMouseListener implements MouseListener {
        public void mouseClicked(MouseEvent e) {
            
        }
        
        public void mouseEntered(MouseEvent e) {
            if(e.getSource() == musicToggle)
                musicToggle.setEnabled(true);
            if(e.getSource() == soundToggle)
                soundToggle.setEnabled(true);
        }
        
        public void mouseExited(MouseEvent e) {
            if(e.getSource() == musicToggle)
                musicToggle.setEnabled(false);
            if(e.getSource() == soundToggle)
                soundToggle.setEnabled(false);
        }

        @Override
        public void mousePressed(MouseEvent e) {
            if(e.getSource() == musicToggle){
                if(musicOn){
                    musicOn = false;
                    musicToggle.setText("MUSIC OFF");
                }
                    
                else{
                    musicOn = true;
                    musicToggle.setText("MUSIC ON");
                }    
            }
                
            if(e.getSource() == soundToggle){
                 if(soundOn){
                     soundOn = false; 
                    soundToggle.setText("SOUND OFF");
                 }
                    
                else{
                    soundOn = true; 
                    soundToggle.setText("SOUND ON");     
                }   
            }
        }

        @Override
        public void mouseReleased(MouseEvent e) {
            
        }
    }
    /* MOUSE EVENT LISTENER CLASS END */

    
    /* KEY LISTENER CLASS START */
    // Key Listener Class
    class myKeyListener implements KeyListener{

        @Override
        public void keyTyped(KeyEvent e) {
            
        }

        @Override
        public void keyPressed(KeyEvent e) {
            // ---- NAVIGATION ----
            // If UP or DOWN KEY is pressed (there are only two options so we dont need another if)
            if(e.getKeyCode() == java.awt.event.KeyEvent.VK_UP || e.getKeyCode() == java.awt.event.KeyEvent.VK_DOWN){
                // Check the pointer state
                switch(navState){
                    case "none":
                        navState = "music";
                        soundToggle.setEnabled(false);
                        musicToggle.setEnabled(true);
                        break;
                    case "music":
                        navState = "sound";
                        soundToggle.setEnabled(true);
                        musicToggle.setEnabled(false);
                        break;
                    case "sound":
                        navState = "music";
                        soundToggle.setEnabled(false);
                        musicToggle.setEnabled(true);
                        break;
                }
           }
            
            // ---- USER CONFIRMATION ----
           else if(e.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER){
                switch(navState) {
                    case "music":
                        if(musicOn){
                            musicToggle.setText("MUSIC OFF");
                            musicOn = false;
                        }
                        else {
                            musicToggle.setText("MUSIC ON");
                            musicOn = true;
                        }
                        break;
                    
                    case "sound":
                        if(soundOn){
                            soundToggle.setText("SOUND OFF");
                            soundOn = false;
                        }
                        else {
                            soundToggle.setText("SOUND ON");
                            soundOn = true;
                        }
                        break;
                }
            }
            
            // ------- USER ESCAPES -------
            else if(e.getKeyCode() == java.awt.event.KeyEvent.VK_ESCAPE){
                transferFocusToMainFrame();
                setVisible(false);
            }
        }

        @Override
        public void keyReleased(KeyEvent e) {
            
        }
    }
    /* KEY LISTENER CLASS END */
    
    // --------- WARNING ----------
    // THIS METHOD IS USED FOR TESTING ONLY
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SettingsPanel testPanel = new EscapeRoom.GUI.SettingsPanel();
                
                // TEST FRAME CREATION
                JFrame f = new JFrame();
                f.setSize(1000, 556);
                f.setUndecorated(true);
                f.setVisible(true);
                
                // ADD PANEL
                f.getContentPane().add(testPanel);
                
            }
        });
    }
    // -----------------------------------
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel escText;
    private javax.swing.JLabel musicToggle;
    private javax.swing.JLabel settingsBg;
    private javax.swing.JLabel soundToggle;
    // End of variables declaration//GEN-END:variables
}
